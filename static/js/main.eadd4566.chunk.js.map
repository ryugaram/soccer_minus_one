{"version":3,"sources":["module.css/UtilsNationNavbar.module.css","Components/NationNavbar.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","NationNavbar","useState","isOpen","setIsOpen","color","light","expand","href","className","style","home","onClick","navbar","leagues","ul","marginRight","to","disabled","cursor","pointerEvents","TeamInfoPage","lazy","HomePage","LeaguePage","App","fallback","CircularProgress","path","children","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,KAAO,gCAAgC,QAAU,qC,2IC2DpDC,IA/CM,WACnB,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAIA,OACE,8BACE,eAAC,IAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,KAAnC,UACE,cAAC,IAAD,CAAaC,KAAK,oBAAoBC,UAAWC,IAAMC,KAAvD,kBAGA,cAAC,IAAD,CAAeC,QARN,kBAAMR,GAAWD,MAS1B,cAAC,IAAD,CAAUA,OAAQA,EAAQU,QAAM,EAACJ,UAAWC,IAAMI,QAAlD,SACE,eAAC,IAAD,CAAKL,UAAWC,IAAMK,GAAIF,QAAM,EAAhC,UACE,cAAC,IAAD,CAASH,MAAO,CAAEM,YAAa,IAA/B,SACE,cAAC,IAAD,CAAMC,GAAG,gBAAT,8BAEF,cAAC,IAAD,CAASP,MAAO,CAAEM,YAAa,IAA/B,SACE,cAAC,IAAD,CAAMC,GAAG,gBAAT,uBAGF,cAAC,IAAD,CAASP,MAAO,CAAEM,YAAa,IAA/B,SACE,cAAC,IAAD,CAAMC,GAAG,gBAAT,uBAEF,cAAC,IAAD,CAASP,MAAO,CAAEM,YAAa,IAA/B,SACE,cAAC,IAAD,CAAMC,GAAG,gBAAT,sBAEF,cAAC,IAAD,CAASP,MAAO,CAAEM,YAAa,IAA/B,SACE,cAAC,IAAD,CACEE,UAAQ,EACRD,GAAG,gBACHP,MAAO,CACLL,MAAO,OACPc,OAAQ,cACRC,cAAe,QANnB,sC,oLC9BRC,EAAeC,gBAAK,kBAAM,8DAC1BC,EAAWD,gBAAK,kBAAM,uDACtBE,EAAaF,gBAAK,kBAAM,uDAwBfG,MAtBf,WACE,OACE,cAAC,WAAD,CAAUC,SAAU,cAACC,EAAA,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC1B,EAAA,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,aAAO2B,KAAK,aAAaC,SAAU,cAACR,EAAD,KAAnC,WACE,cAACA,EAAD,MAEF,cAAC,IAAD,CAAOO,KAAK,IAAIE,OAAK,EAArB,SACE,cAACP,EAAD,MAEF,cAAC,IAAD,aAAOK,KAAK,mBAAmBC,SAAU,cAACL,EAAD,KAAzC,WACE,cAACA,EAAD,MAEF,cAAC,IAAD,CAAUI,KAAK,KAAKX,GAAG,eClBlBc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eadd4566.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"UtilsNationNavbar_home__2gUxT\",\"leagues\":\"UtilsNationNavbar_leagues__zzIGO\"};","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport style from \"../module.css/UtilsNationNavbar.module.css\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n} from \"reactstrap\";\r\n\r\nconst NationNavbar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/soccer_minus_one\" className={style.home}>\r\n          Home\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar className={style.leagues}>\r\n          <Nav className={style.ul} navbar>\r\n            <NavItem style={{ marginRight: 50 }}>\r\n              <Link to=\"/Leagues/2021\">Premier League</Link>\r\n            </NavItem>\r\n            <NavItem style={{ marginRight: 50 }}>\r\n              <Link to=\"/Leagues/2014\">La Liga</Link>\r\n            </NavItem>\r\n\r\n            <NavItem style={{ marginRight: 50 }}>\r\n              <Link to=\"/Leagues/2019\">Serie A</Link>\r\n            </NavItem>\r\n            <NavItem style={{ marginRight: 50 }}>\r\n              <Link to=\"/Leagues/2015\">Ligue1</Link>\r\n            </NavItem>\r\n            <NavItem style={{ marginRight: 50 }}>\r\n              <Link\r\n                disabled\r\n                to=\"/Leagues/2012\"\r\n                style={{\r\n                  color: \"gray\",\r\n                  cursor: \"not-allowed\",\r\n                  pointerEvents: \"none\",\r\n                }}\r\n              >\r\n                Bundesliga\r\n              </Link>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NationNavbar;\r\n","import React, { lazy, Suspense, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport NationNavbar from \"./Components/NationNavbar\";\n\nconst TeamInfoPage = lazy(() => import(\"./pages/TeamsInfo\"));\nconst HomePage = lazy(() => import(\"./pages/Home\"));\nconst LeaguePage = lazy(() => import(\"./pages/Leagues\"));\n\nfunction App() {\n  return (\n    <Suspense fallback={<CircularProgress />}>\n      <Router>\n        <NationNavbar />\n        <Switch>\n          <Route path=\"/teams/:id\" children={<TeamInfoPage />}>\n            <TeamInfoPage />\n          </Route>\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n          <Route path=\"/Leagues/:League\" children={<LeaguePage />}>\n            <LeaguePage />\n          </Route>\n          <Redirect path=\"**\" to=\"/\" />\n        </Switch>\n      </Router>\n    </Suspense>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}